# --- Recommended Build Performance Optimizations ---
# 1. Set JVM arguments for the Gradle Daemon
# Start with 2GB, increase to 4GB or more on machines with 16GB+ RAM if builds are slow.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 -Dkotlin.daemon.jvm.options="-Xmx2048m"
# 2. Enable Parallel Execution
# Builds independent modules in parallel. Harmless for single-module projects, crucial for multi-module.
org.gradle.parallel=true
# 3. Enable Gradle Build Cache
# Reuses task outputs from ANY previous build, even from other machines (if using a remote cache).
# This is one of the most significant build speed improvements.
org.gradle.caching=true
# 4. Enable Configuration Cache (Experimental but often stable)
# Caches the result of the configuration phase, making subsequent builds much faster.
# If you encounter issues with a library, you might need to disable this temporarily.
org.gradle.configuration-cache.problems=warn
# --- Android Plugin Optimizations ---
# 5. Use AndroidX Libraries (Mandatory)
android.useAndroidX=true
# 6. Use Non-Transitive R Classes (Performance Boost)
android.nonTransitiveRClass=true
# 7. (Optional) Disable Build Analyzer
# The build analyzer provides useful info but adds a small overhead.
# You can set this to false for slightly faster builds once you're done optimizing.
# android.enableBuildAnalyzer=false